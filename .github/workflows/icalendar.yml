name: Periodic iCalendar Generation

on:
  schedule:
    - cron: '0 0 * * *' # Schedule to run every day at midnight (UTC)
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Set Environment Variables
        run: echo "NOW=$(date +'%Y.%m.%d_%H.%M')" >> $GITHUB_ENV

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
        
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10' # Replace with your desired Python version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run the script
        run: python super-scraper.py
        
      - name: Calculate SHA256 sum
        id: sha256sum
        run: echo "HASH=$(sha256sum WSPL_Events.ics | awk '{print $1}')" >> $GITHUB_ENV

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: release-${{ env.NOW }}
          release_name: Release ${{ env.NOW }}
          body: |
            Automatically generated release.

            SHA256 sum:
            ${{ env.HASH }}
          draft: false
          prerelease: false

      - name: Upload iCalendar file
        id: upload_ical
        uses: actions/upload-artifact@v2
        with:
          name: icalendar
          path: WSPL_Events.ics


      - name: Upload report file
        id: upload_report
        uses: actions/upload-artifact@v2
        with:
          name: report
          path: seemingly-broken-events.txt

      - name: Upload iCal File to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: WSPL_Events.ics
          asset_name: WSPL_Events.ics
          asset_content_type: text/calendar

      - name: Upload Report to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: seemingly-broken-events.txt
          asset_name: seemingly-broken-events.txt
          asset_content_type: text/plain
